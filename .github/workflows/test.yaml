name: Test Suite for Volcano

on:
  - pull_request

jobs:
  call-inclusive-naming-check:
    name: Inclusive naming
    uses: canonical-web-and-design/Inclusive-naming/.github/workflows/woke.yaml@main
    with:
      fail-on-error: "true"

  lint-unit:
    name: Lint Unit
    uses: charmed-kubernetes/workflows/.github/workflows/lint-unit.yaml@main
    needs:
      - call-inclusive-naming-check
    with:
      python: "['3.8', '3.9', '3.10', '3.11']"

  build-dependencies:
    name: Build Charms
    runs-on: ubuntu-22.04
    needs:
      - lint-unit
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: lxd
        lxd-channel: 5.10/stable
        charmcraft-channel: 2.x/stable

    - name: Pack Charms
      run: |
        charmcraft pack -p charms/volcano-admission
        charmcraft pack -p charms/volcano-controller
        charmcraft pack -p charms/volcano-scheduler

    - name: Upload charm artifacts
      uses: actions/upload-artifact@v3
      with:
        name: charms
        path: ./*.charm

  integration-test:
    name: Integration test
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs:
      - build-dependencies
    strategy:
      matrix:
        microk8s: ["1.24/stable"]
        juju: ["2.9/stable", "3.0/stable"]
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: microk8s
        channel: ${{ matrix.microk8s }}
        juju-channel: ${{ matrix.juju }}

    - name: Download charm artifacts
      uses: actions/download-artifact@v3
      with:
        name: charms

    - name: Prepare lxc project
      run: lxc --project charmcraft project create local:charmcraft

    - name: Run test
      run: sg snap_microk8s -c "tox -e integration"

    - name: Setup Debug Artifact Collection
      if: ${{ failure() }}
      run: mkdir tmp
    - name: Collect K8s Status
      if: ${{ failure() }}
      run: sudo microk8s.kubectl get all -A 2>&1 | tee tmp/microk8s-status-all.txt
    - name: Collect Juju Status
      if: ${{ failure() }}
      run: sudo juju status 2>&1 | tee tmp/juju-status.txt
    - name: Collect K8s Deployment details
      if: ${{ failure() }}
      run: sudo microk8s.kubectl describe deployments -A 2>&1 | tee tmp/microk8s-deployments.txt
    - name: Collect K8s ReplicaSet details
      if: ${{ failure() }}
      run: sudo microk8s.kubectl describe replicasets -A 2>&1 | tee tmp/microk8s-replicasets.txt
    - name: Collect K8s DaemonSet details
      if: ${{ failure() }}
      run: sudo microk8s.kubectl describe daemonsets -A 2>&1 | tee tmp/microk8s-daemonsets.txt
    - name: Collect K8s pod logs
      if: ${{ failure() }}
      run: |
        for pod in `sudo microk8s.kubectl get pods -n volcano-system | awk '{print$1}' | grep -v NAME`; do
          echo "Pod logs for: $pod"
          echo "----------------------------------"
          sudo microk8s.kubectl logs $pod -n volcano-system 2>&1 | tee tmp/pod-$pod-logs.txt
          echo
          echo
        done
    - name: Collect microk8s snap logs
      if: ${{ failure() }}
      run: sudo snap logs -n 300 microk8s 2>&1 | tee tmp/snap-log-microk8s.txt
    - name: Collect Juju logs for volcano-admission
      if: ${{ failure() }}
      run: sudo juju debug-log --replay --no-tail -i volcano-admission | tee tmp/unit-volcano-admission-0.log
    - name: Collect Juju logs for volcano-scheduler
      if: ${{ failure() }}
      run: sudo juju debug-log --replay --no-tail -i volcano-scheduler | tee tmp/unit-volcano-scheduler-0.log
    - name: Collect Juju logs for volcano-controller-manager
      if: ${{ failure() }}
      run: sudo juju debug-log --replay --no-tail -i volcano-controller-manager | tee tmp/unit-volcano-controller-manager-0.log
    - name: Upload debug artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: test-run-artifacts
        path: tmp
